// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backendVeterinaria.Data;

#nullable disable

namespace backendVeterinaria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240419235524_CreacionInicial")]
    partial class CreacionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backendVeterinaria.Models.Empleado", b =>
                {
                    b.Property<int>("empleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("empleadoId"));

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("curp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("estatusId")
                        .HasColumnType("integer");

                    b.Property<string>("fechaBaja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fechaIngreso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("personaId")
                        .HasColumnType("integer");

                    b.Property<int?>("rolId")
                        .HasColumnType("integer");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("empleadoId");

                    b.HasIndex("estatusId");

                    b.HasIndex("personaId");

                    b.HasIndex("rolId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("backendVeterinaria.Models.Estatus", b =>
                {
                    b.Property<int>("estatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("estatusId"));

                    b.Property<string>("nombreEstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("estatusId");

                    b.ToTable("Estatus");

                    b.HasData(
                        new
                        {
                            estatusId = 1,
                            nombreEstatus = "Activo"
                        },
                        new
                        {
                            estatusId = 2,
                            nombreEstatus = "Inactivo"
                        });
                });

            modelBuilder.Entity("backendVeterinaria.Models.Persona", b =>
                {
                    b.Property<int>("personaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("personaId"));

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipoPersona")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("personaId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("backendVeterinaria.Models.Rol", b =>
                {
                    b.Property<int?>("rolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("rolId"));

                    b.Property<string>("nombreRol")
                        .HasColumnType("text");

                    b.HasKey("rolId");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            rolId = 1,
                            nombreRol = "Comercial"
                        },
                        new
                        {
                            rolId = 2,
                            nombreRol = "General"
                        });
                });

            modelBuilder.Entity("backendVeterinaria.Models.Empleado", b =>
                {
                    b.HasOne("backendVeterinaria.Models.Estatus", null)
                        .WithMany("empleados")
                        .HasForeignKey("estatusId");

                    b.HasOne("backendVeterinaria.Models.Persona", null)
                        .WithMany("empleados")
                        .HasForeignKey("personaId");

                    b.HasOne("backendVeterinaria.Models.Rol", null)
                        .WithMany("empleados")
                        .HasForeignKey("rolId");
                });

            modelBuilder.Entity("backendVeterinaria.Models.Estatus", b =>
                {
                    b.Navigation("empleados");
                });

            modelBuilder.Entity("backendVeterinaria.Models.Persona", b =>
                {
                    b.Navigation("empleados");
                });

            modelBuilder.Entity("backendVeterinaria.Models.Rol", b =>
                {
                    b.Navigation("empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
